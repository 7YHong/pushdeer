<script>
  /**
   * 应用级别的配置，供所有页面公用
   */

  const $utils = require('./helper/utils').default
  const $apis = require('./helper/apis').default
  const $storage = require('@system.storage')

  const appInitC = new BroadcastChannel('init')

  /* @desc: 注入方法至全局 global,以便页面调用 */
  const hook2global = Object.getPrototypeOf(global) || global;
  hook2global.$utils = $utils
  hook2global.API = $apis

  const _promiseFactory = (pointer, params = {}) => {
    return new Promise((resolve, reject) => {
      params = Object.assign({
        success: (data) => { resolve(data); },
        fail: (err, code) => { reject(err, code) }
      }, params);
      pointer(params);
    });
  }
  hook2global.promiseFactory = _promiseFactory;

  (async () => {
    let token = await _promiseFactory($storage.get, { key: 'token' })
      .catch((data, code) => {
        console.warn(`get token from storage fail, code = ${code}`)
      })
    $apis.setToken(token)
    hook2global.$token = token
    appInitC.postMessage({})
  })()


  export default {
    onCreate() { }
  }
</script>
